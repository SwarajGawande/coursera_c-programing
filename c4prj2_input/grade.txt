Grading at Fri Jun 26 03:55:46 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==954== Memcheck, a memory error detector
==954== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==954== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==954== Command: ./tester i1 i2
==954== Parent PID: 953
==954== 
==954== Use of uninitialised value of size 8
==954==    at 0x401180: print_hand (in /graderhome/work/c4prj2_input/tester)
==954==    by 0x401E7B: main (test-input.c:84)
==954== 
==954== Invalid read of size 8
==954==    at 0x401180: print_hand (in /graderhome/work/c4prj2_input/tester)
==954==    by 0x401E7B: main (test-input.c:84)
==954==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==954== 
==954== 
==954== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==954==  Access not within mapped region at address 0x0
==954==    at 0x401180: print_hand (in /graderhome/work/c4prj2_input/tester)
==954==    by 0x401E7B: main (test-input.c:84)
==954==  If you believe this happened as a result of a stack
==954==  overflow in your program's main thread (unlikely but
==954==  possible), you can try to increase the size of the
==954==  main thread stack using the --main-stacksize= flag.
==954==  The main thread stack size used in this run was 8388608.
==954== 
==954== HEAP SUMMARY:
==954==     in use at exit: 2,864 bytes in 159 blocks
==954==   total heap usage: 347 allocs, 188 frees, 25,376 bytes allocated
==954== 
==954== LEAK SUMMARY:
==954==    definitely lost: 0 bytes in 0 blocks
==954==    indirectly lost: 0 bytes in 0 blocks
==954==      possibly lost: 0 bytes in 0 blocks
==954==    still reachable: 2,864 bytes in 159 blocks
==954==         suppressed: 0 bytes in 0 blocks
==954== Rerun with --leak-check=full to see details of leaked memory
==954== 
==954== For counts of detected and suppressed errors, rerun with: -v
==954== Use --track-origins=yes to see where uninitialised values come from
==954== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
