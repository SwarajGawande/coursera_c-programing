Grading at Fri Jun 26 03:32:02 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==294== Memcheck, a memory error detector
==294== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==294== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==294== Command: ./tester h.txt d.txt
==294== Parent PID: 293
==294== 
==294== Invalid read of size 8
==294==    at 0x400ED2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x400B5F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x400D00: read_input (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x401CB5: main (test-input.c:69)
==294==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==294== 
==294== 
==294== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==294==  Access not within mapped region at address 0x8
==294==    at 0x400ED2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x400B5F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x400D00: read_input (in /graderhome/work/c4prj2_input/tester)
==294==    by 0x401CB5: main (test-input.c:69)
==294==  If you believe this happened as a result of a stack
==294==  overflow in your program's main thread (unlikely but
==294==  possible), you can try to increase the size of the
==294==  main thread stack using the --main-stacksize= flag.
==294==  The main thread stack size used in this run was 8388608.
==294== 
==294== HEAP SUMMARY:
==294==     in use at exit: 808 bytes in 12 blocks
==294==   total heap usage: 20 allocs, 8 frees, 5,128 bytes allocated
==294== 
==294== LEAK SUMMARY:
==294==    definitely lost: 0 bytes in 0 blocks
==294==    indirectly lost: 0 bytes in 0 blocks
==294==      possibly lost: 0 bytes in 0 blocks
==294==    still reachable: 808 bytes in 12 blocks
==294==         suppressed: 0 bytes in 0 blocks
==294== Rerun with --leak-check=full to see details of leaked memory
==294== 
==294== For counts of detected and suppressed errors, rerun with: -v
==294== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==300== Memcheck, a memory error detector
==300== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==300== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==300== Command: ./tester i1 i2
==300== Parent PID: 299
==300== 
==300== Invalid read of size 8
==300==    at 0x400ED2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x400B5F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x400D00: read_input (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x401CB5: main (test-input.c:69)
==300==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==300== 
==300== 
==300== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==300==  Access not within mapped region at address 0x8
==300==    at 0x400ED2: add_future_card (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x400B5F: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x400D00: read_input (in /graderhome/work/c4prj2_input/tester)
==300==    by 0x401CB5: main (test-input.c:69)
==300==  If you believe this happened as a result of a stack
==300==  overflow in your program's main thread (unlikely but
==300==  possible), you can try to increase the size of the
==300==  main thread stack using the --main-stacksize= flag.
==300==  The main thread stack size used in this run was 8388608.
==300== 
==300== HEAP SUMMARY:
==300==     in use at exit: 760 bytes in 9 blocks
==300==   total heap usage: 14 allocs, 5 frees, 4,936 bytes allocated
==300== 
==300== LEAK SUMMARY:
==300==    definitely lost: 0 bytes in 0 blocks
==300==    indirectly lost: 0 bytes in 0 blocks
==300==      possibly lost: 0 bytes in 0 blocks
==300==    still reachable: 760 bytes in 9 blocks
==300==         suppressed: 0 bytes in 0 blocks
==300== Rerun with --leak-check=full to see details of leaked memory
==300== 
==300== For counts of detected and suppressed errors, rerun with: -v
==300== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
